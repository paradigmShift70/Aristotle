#!wing
#!version=5.0
##################################################################
# Wing IDE project file                                          #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'filter': 'All Source Files',
                        'include_hidden': 0,
                        'recursive': 0}]
proj.file-type = 'normal'
proj.main-file = loc('GUI.py')
[user attributes]
debug.breakpoints = {loc('xmlParser/xmlparser.py'): {138: (0,
        None,
        1,
        0)}}
debug.debug-probe-history = {loc('GUI.py'): ['print self.env\n',
        'print self.env._steps\n',
        'd._newVal\n',
        'other\n',
        'self\n',
        'self.entryList\n',
        'self.selectionList\n',
        'self.proofWidget\n',
        'self.proofWidget.selectionList\n',
        'self._selectionList\n',
        'self._steps\n',
        'self.env\n',
        'self.env._steps\n',
        'd\n',
        'd.dict\n',
        'additional\n',
        'additionalMappings\n',
        'self.dict\n',
        'conclusionSet\n',
        'rule.abbrev\n',
        'ruleSeq._conclusions\n'],
                             loc('Logic.py'): ['str(s)\n',
        'ruleSeq._conclusions\n'],
                             loc('testWindow.py'): ['print ms._str\n',
        'ms._str\n',
        'ms._map\n',
        'print ms\n',
        'mappedStr._map\n',
        'mappedStr._str\n',
        'self._wffStr\n',
        'self._sel\n',
        'self._wffMap\n']}
debug.err-values = {None: {},
                    loc('FormParser.py'): {},
                    loc('GUI.py'): {'stack[3].locals.d': (-2,
        None,
        None,
        'error',
        None,
        1,
        None,
        1,
        '<error handling value>',
        None,
        None,
        0),
                                    'stack[3].locals.self': (-2,
        None,
        None,
        'error',
        None,
        1,
        None,
        1,
        '<error handling value>',
        None,
        None,
        0),
                                    'stack[4].locals.self': (-2,
        None,
        None,
        'error',
        None,
        1,
        None,
        1,
        '<error handling value>',
        None,
        None,
        0),
                                    'stack[5].locals.self': (-2,
        None,
        None,
        'error',
        None,
        1,
        None,
        1,
        '<error handling value>',
        None,
        None,
        0),
                                    'stack[current=3].locals.d': (-2,
        None,
        None,
        'error',
        None,
        1,
        None,
        1,
        '<error handling value>',
        None,
        None,
        0)},
                    loc('Logic.py'): {},
                    loc('ParsingFactory.py'): {},
                    loc('Proof.py'): {},
                    loc('ProofBuilder.py'): {},
                    loc('ProofBuilder___.py'): {},
                    loc('StructuredString.py'): {},
                    loc('WFFParser.py'): {},
                    loc('testWindow.py'): {},
                    loc('xmlParser/xmlparser.py'): {}}
debug.exceptions-ignored = {loc('Form.py'): {731: 1},
                            loc('Proof.py'): {95: 1,
        191: 1,
        192: 1,
        193: 1,
        202: 1,
        212: 1,
        216: 1,
        218: 1,
        222: 0,
        225: 1,
        284: 1,
        384: 1},
                            loc('../../../Python24/Lib/lib-tk/Tix.py'): {326: 1},
                            loc('../../../Python24/Lib/lib-tk/Tkinter.py'): {1654: 1}}
debug.shell-history = {None: ['len( { } )\n',
                              'len( { 1:3.14 } )\n',
                              "a = ['a', 'b', 'c' ]\n",
                              "b = ['a', 'b', 'c' ]\n",
                              "b[2] = 'z'\n",
                              'b\n',
                              "b[2] = 'C'\n",
                              'a == b\n',
                              'else:\n',
                              "   print 'x'\n",
                              "print 'ok'\n",
                              'if None:\n',
                              "   print 'ok'\n",
                              "s = { 'a':1, 'b':2, 'c':3 }\n",
                              "s['a']\n",
                              "s['z']\n",
                              'l1 = [ 1, 2, 3, 4 ]\n',
                              'l2 = [ 1, 2, 3, 4 ]\n',
                              'l3 = [ 1, 2, 3 ]\n',
                              'l1==l2\n',
                              'l1==l3\n',
                              'a=[1,2]\n',
                              'b=[2,1]\n',
                              'a==b\n',
                              'try:\n',
                              '   raise Exception\n',
                              'except:\n',
                              'def f( ):\n',
                              '   try:\n',
                              "      raise Exception, 'xyz'\n",
                              '   except:\n',
                              "      print 'Caught'\n",
                              'f( )\n',
                              'import tkMessageBox\n',
                              'import Tix\n',
                              'import Tkinter\n',
                              'root = Tkinter.root( )\n',
                              'root = Tkinter.Tk( )\n',
                              'f = Tkinter.frame( root )\n',
                              'f = Tkinter.Frame( root )\n',
                              't = Tkinter.Text( f, height=200, width=300 )'\
                              '\n',
                              't.pack( side=Tkinter.TOP )\n',
                              'f.pack( )\n',
                              'root.mainloop()\n',
                              't.configure( font=("Lucida Sans Serif", 15, b'\
                              'old) )\n',
                              't.configure( font=("Lucida Sans Serif", 15) )'\
                              '\n',
                              't.configure( font=(15) )\n',
                              'import Tkfont\n',
                              'import TkFont\n',
                              'import tkFont\n',
                              't.configure( font=("Lucida Sans Serif", 15, "'\
                              'bold") )\n',
                              'fnt=tkFont.Font( "Lucida", 15, "bold" )\n',
                              "e = '-A ^ B'\n",
                              'e[3]\n',
                              '3[0:6]\n',
                              'e[0:6]\n',
                              'e[0]\n',
                              'e[0:2]\n',
                              'e[1]\n',
                              'e[1:2]\n',
                              'e[5]\n',
                              'e[5:6]\n']}
debug.show-args-dialog = {loc('Proof.py'): 0}
debug.var-col-widths = [0.674061433447099,
                        0.32593856655290104]
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': '8VtRrA2HEseat5owmWwNryCNsg'\
        '20eqDy',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [1,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.26245614035087717,
                 'override_title': None,
                 'pagelist': [('indent',
                               'tall',
                               0,
                               {}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(0,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('refactoring',
                               'tall',
                               0,
                               {}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('Form.py'): {'column'\
        '-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('Form.py'),
                      'AtomicWFF')]},
        loc('FormParser.py'): {'column-widths': None,
                               'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': [('generic attribute',
        loc('FormParser.py'),
        'assumption1')]},
        loc('FormScanner.py'): {'column-widths': [1.0],
                                'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('class def',
        loc('FormScanner.py'),
        'Lexeme')]},
        loc('GUI.py'): {'column-widths': [1.0],
                        'expanded-nodes': [],
                        'selected-nodes': [[('class def',
        loc('GUI.py'),
        'CancelOperation')]],
                        'top-node': [('class def',
                                      loc('GUI.py'),
                                      'CancelOperation')]},
        loc('GUITools.py'): {'column-widths': None,
                             'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('class def',
        loc('GUITools.py'),
        'BasicDialog')]},
        loc('GuiWidgets.py'): {'column-widths': [1.0],
                               'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': None},
        loc('Logic.py'): {'column-widths': None,
                          'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('class def',
        loc('Logic.py'),
        'Calculus')]},
        loc('Proof.py'): {'column-widths': [1.0],
                          'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('class def',
        loc('Proof.py'),
        'Env')]},
        loc('StructuredString.py'): {'column-widths': [1.0],
                                     'expanded-nodes': [],
                                     'selected-nodes': [[('class def',
        loc('StructuredString.py'),
        'InvalidRegionException')]],
                                     'top-node': [('class def',
        loc('StructuredString.py'),
        'InvalidRegionException')]},
        u'By Module': {'column-widths': [1.0],
                       'expanded-nodes': [],
                       'selected-nodes': [[('generic attribute',
        loc('Form.py'),
        '')]],
                       'top-node': [('generic attribute',
                                     loc('Form.py'),
                                     '')]},
        loc('Scanner.py'): {'column-widths': [1.0],
                            'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('class def',
        loc('Scanner.py'),
        'ParseError')]},
        loc('Sequent.py'): {'column-widths': [1.0],
                            'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('class def',
        loc('Sequent.py'),
        'ExprSet')]},
        loc('Symbols.py'): {'column-widths': None,
                            'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('generic attribute',
        loc('Symbols.py'),
        'BICONDITIONAL')]},
        loc('WFF.py'): {'column-widths': [1.0],
                        'expanded-nodes': [],
                        'selected-nodes': [[('class def',
        loc('WFF.py'),
        'AtomicExpr')]],
                        'top-node': [('class def',
                                      loc('WFF.py'),
                                      'AtomicExpr')]},
        loc('WFFScanner.py'): {'column-widths': [1.0],
                               'expanded-nodes': [[('class def',
        loc('WFFScanner.py'),
        'QuickExprScanner')]],
                               'selected-nodes': [[('class def',
        loc('WFFScanner.py'),
        'QuickExprScanner')]],
                               'top-node': [('class def',
        loc('WFFScanner.py'),
        'QuickExprScanner')]},
        loc('justification.py'): {'column-widths': [1.0],
                                  'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('class def',
        loc('justification.py'),
        'AssertionJustification')]},
        loc('testWindow.py'): {'column-widths': None,
                               'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': [('generic attribute',
        loc('testWindow.py'),
        'D')]},
        loc('util.py'): {'column-widths': [1.0],
                         'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('class def',
                                       loc('util.py'),
                                       'list')]},
        loc('xmlParser/xmlparser.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('xmlParser/xmlparser.py'),
                      'OutlineBuilder')]},
        loc('../../../../../Python33/Lib/tkinter/__init__.py'): {'column-wid'\
        'ths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Python33/Lib/tkinter/__init__.py'),
                      'At')]},
        u'All Classes': {'column-widths': [1.0],
                         'expanded-nodes': [],
                         'selected-nodes': [[('class def',
        loc('Form.py'),
        'AtomicWFF')]],
                         'top-node': [('class def',
                                       loc('Form.py'),
                                       'AtomicWFF')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('uses',
                               'tall',
                               0,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('templating#02EFWRQK9X23',
                               'tall',
                               0,
                               {'tree-states': {u'C:\\Documents and Settings\\ProvostRH\\Application Data\\Wing IDE 2\\templates': [],
        u'C:\\Program Files\\Wing IDE 2.0\\scripts\\templates': []}})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [0,
                          2],
        'notebook_display': 'tabs only',
        'notebook_percent': 0.3196969696969697,
        'override_title': None,
        'pagelist': [('debug-io',
                      'wide',
                      0,
                      {}),
                     ('debug-modules',
                      'wide',
                      0,
                      {}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u"'ENTAILS'",
                                       'fReverse': False,
                                       'fSearchText': u'ProofBuilder',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 44,
                                       'fReplaceText': u'self._tokLineText',
                                       'fReverse': False,
                                       'fSearchText': u'ruleName',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': True,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-watch',
                      'wide',
                      0,
                      {'node-states': [('eval',
        'outline')],
                       'tree-state': {'column-widths': [0.2939346811819596,
        0.7060653188180405],
                                      'expanded-nodes': [],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {u'file:C:/Projects/SW DEV - Python/SW Dev/Aristotle/Python/GUI.py': ['s'\
        'elf._scanner.peek()\n',
        'selectionInfo.dominantSubstring()\n',
        'selectionInfo[1].dominantSubstring()\n',
        'selectionInfo[1].regionSubstring()\n',
        'selectionInfo[1].getClientData()\n',
        'self._logic\n',
        'type(expr)\n',
        'self\n',
        'self._sequent\n',
        'type(self._sequent)\n',
        'str(self._sequent)\n',
        's = self._sequent\n',
        'p = s.premiseSet()\n',
        'p\n',
        'len(premiseSet)\n',
        'self._sym\n',
        'atom\n',
        'self.additionalSymbolMappings\n',
        'self._formStruct.theString\n',
        'self._formStruct\n',
        'self._formStruct._builder\n',
        'self._formStruct._str\n',
        'self._formStruct._indexInfoList\n',
        'theMap\n',
        'for idx,val in theMap.items():\n   print( idx, val._primaryString, '\
        'val._dominantIndecies, val._regionIndecies, _clientData )\n\n',
        'for idx,val in theMap.items():\n   print( idx, val._primaryString, '\
        'val._dominantIndecies, val._regionIndecies, val._clientData )\n\n',
        'for idx,val in theMap.items():\n   primary = val._primaryStringval.'\
        '_dominantIndecies, val._regionIndecies, val._clientData )\n\n',
        'self._formStruct.diag()\n',
        'theStructuredStringBuilder.diag()\n',
        'mappedStrBuilder.diag()\n',
        'self.diag()\n',
        'ss.diag()\n',
        'selection\n',
        'selection[1]\n',
        'selection[1]._primaryString\n',
        'selection[1]._dominantIndecies\n',
        'selection[1]._regionIndecies\n',
        'selection[1]._clientData\n',
        'self.logic\n'],
                                   u'file:C:/Projects/SW DEV - Python/SW Dev/Aristotle/Python/StructuredString.py': ['i'\
        'sinstance( domIndecies, list )\n',
        'domIndecies\n',
        'type( domIndecies )\n',
        '0 < self._regionIndecies[0] <= maxIndex\n',
        'self._regionIndecies[0]\n',
        'len(theIndexInfoList)\n',
        'len(theString)\n']},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 0,
                       'selection_start': 0}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 157,
                       'selection_end': 157,
                       'selection_start': 157}),
                     ('search',
                      'wide',
                      1,
                      {'action': 'search',
                       'file-set': None,
                       'mode': 'interactive',
                       'options': {'AutoBackground': 1,
                                   'AutoFind': 1,
                                   'AutoShowBatch': 0,
                                   'Fast': 1,
                                   'Incremental': 1,
                                   'InterpretBackslash': 0,
                                   'MatchCase': 0,
                                   'OmitBinary': 1,
                                   'Recursive': 0,
                                   'ReplaceOnDisk': 0,
                                   'Reverse': 0,
                                   'WholeWords': 0,
                                   'Wrapping': 1},
                       'prefix-file': 'short-file',
                       'prefix-lineno': 1,
                       'regex-flags': 46,
                       'replace-entry-expanded': 0,
                       'replace-string': 'self._sequent',
                       'scope': ['current-file'],
                       'search-entry-expanded': 0,
                       'search-string': 'FreeAtomDialog',
                       'search-style': 'text',
                       'starting-directory': 'c:\\Documents and Settings\\Pr'\
        'ovostRH\\Desktop\\Python Apps\\'})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('StructuredString.py'),
        {},
        1371160754.583]],
        0),
        'current-loc': loc('GUI.py'),
        'editor-state-list': [(loc('Calculus.py'),
                               {'attrib-starts': [('Calculus',
        96),
        ('Calculus.conclusionOnlySymbols',
         190)],
                                'first-line': 26,
                                'folded-linenos': [5,
        6,
        25,
        28,
        41,
        69,
        72,
        75,
        82,
        86,
        91,
        101,
        131,
        147,
        158,
        169,
        178,
        216,
        236,
        237,
        251,
        260,
        267],
                                'sel-line': 191,
                                'sel-line-start': 7829,
                                'selection_end': 7829,
                                'selection_start': 7829}),
                              (loc('Form.py'),
                               {'attrib-starts': [('Sequent',
        805),
        ('Sequent.conclusionAdditions',
         964)],
                                'first-line': 1,
                                'folded-linenos': [12,
        23,
        34,
        43,
        53,
        67,
        91,
        104,
        117,
        124,
        132,
        141,
        151,
        160,
        171,
        175,
        182,
        190,
        205,
        216,
        227,
        239,
        242,
        253,
        269,
        285,
        291,
        301,
        310,
        327,
        340,
        354,
        366,
        382,
        394,
        417,
        439,
        446,
        455,
        464,
        486,
        512,
        528,
        566,
        586,
        611,
        621,
        624,
        645,
        657,
        678,
        684,
        692,
        701,
        709,
        715,
        723,
        737,
        769,
        808,
        833,
        848,
        871,
        874,
        894,
        917,
        935,
        940,
        943,
        946,
        964,
        984,
        1008,
        1031,
        1044,
        1057],
                                'sel-line': 964,
                                'sel-line-start': 32139,
                                'selection_end': 32159,
                                'selection_start': 32159}),
                              (loc('FormParser.py'),
                               {'attrib-starts': [('WFFScanner',
        93),
        ('WFFScanner.__init__',
         111)],
                                'first-line': 30,
                                'folded-linenos': [34,
        48,
        58,
        80,
        111,
        129,
        197,
        225,
        254,
        263,
        286,
        309,
        330,
        359,
        402],
                                'sel-line': 125,
                                'sel-line-start': 3846,
                                'selection_end': 3846,
                                'selection_start': 3846}),
                              (loc('GUI.py'),
                               {'attrib-starts': [('ProofView',
        371),
        ('ProofView.onInferButton',
         495)],
                                'first-line': 188,
                                'folded-linenos': [87,
        127,
        138,
        148,
        188,
        197,
        204,
        229,
        238,
        259,
        274,
        283,
        291,
        314,
        321,
        328,
        336,
        342,
        350,
        357,
        362,
        372,
        399,
        413,
        434],
                                'sel-line': 502,
                                'sel-line-start': 18431,
                                'selection_end': 18431,
                                'selection_start': 18431}),
                              (loc('GUITools.py'),
                               {'attrib-starts': [('BasicDialog',
        -1),
        ('BasicDialog.__init__',
         6)],
                                'first-line': 0,
                                'folded-linenos': [6,
        39,
        44,
        60,
        72,
        75,
        81,
        85,
        96,
        100],
                                'sel-line': 19,
                                'sel-line-start': 394,
                                'selection_end': 394,
                                'selection_start': 394}),
                              (loc('Language.py'),
                               {'attrib-starts': [('Lexeme',
        4)],
                                'first-line': 0,
                                'folded-linenos': [26,
        72,
        104,
        117],
                                'sel-line': 21,
                                'sel-line-start': 420,
                                'selection_end': 444,
                                'selection_start': 444}),
                              (loc('Logic.py'),
                               {'attrib-starts': [('Logic',
        37),
        ('Logic.__init__',
         39)],
                                'first-line': 36,
                                'folded-linenos': [39,
        53,
        65],
                                'sel-line': 52,
                                'sel-line-start': 1189,
                                'selection_end': 1189,
                                'selection_start': 1189}),
                              (loc('Proof.py'),
                               {'attrib-starts': [('Step',
        6)],
                                'first-line': 0,
                                'folded-linenos': [8,
        41,
        54,
        67,
        73,
        97,
        104,
        121,
        137,
        150,
        165,
        182,
        197,
        214,
        236,
        249,
        278,
        292,
        305,
        337,
        355,
        375,
        389,
        410,
        441,
        448,
        463],
                                'sel-line': 94,
                                'sel-line-start': 3744,
                                'selection_end': 3760,
                                'selection_start': 3760}),
                              (loc('StructuredString.py'),
                               {'attrib-starts': [('StructuredStringBuilder',
        169),
        ('StructuredStringBuilder.structuredString',
         334)],
                                'first-line': 27,
                                'folded-linenos': [16,
        27,
        30,
        34,
        37,
        41,
        44,
        47,
        74,
        106,
        121,
        129,
        137,
        145,
        154,
        161,
        170,
        180,
        188,
        212,
        229,
        246,
        265,
        280,
        298,
        313,
        326],
                                'sel-line': 359,
                                'sel-line-start': 13357,
                                'selection_end': 13398,
                                'selection_start': 13398})],
        'has-focus': False,
        'locked': False},
        [loc('Calculus.py'),
         loc('Form.py'),
         loc('FormParser.py'),
         loc('GUI.py'),
         loc('GUITools.py'),
         loc('Language.py'),
         loc('Logic.py'),
         loc('Proof.py'),
         loc('StructuredString.py')]),
                               'open_files': [u'Calculus.py',
        u'Form.py',
        u'FormParser.py',
        u'GUITools.py',
        u'Language.py',
        u'Logic.py',
        u'Proof.py',
        u'StructuredString.py',
        u'GUI.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.6238738738738738},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.4848762603116407},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (141,
                         2,
                         1163,
                         745)}]}
guimgr.recent-documents = [loc('GUI.py'),
                           loc('StructuredString.py'),
                           loc('Calculus.py'),
                           loc('Logic.py'),
                           loc('Form.py'),
                           loc('Proof.py'),
                           loc('Language.py'),
                           loc('FormParser.py'),
                           loc('GUITools.py')]
guimgr.visual-state = {loc('../../../../Projects/SW DEV - Python/SW Dev/Aristotle/Aristotle/Python/__ExprTraits.py'): {'a'\
        'ttrib-starts': [('InvalidExpressionError',
                          0)],
        'first-line': 147,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('ArgForm.py'): {'first-line': 0,
        'selection_end': 229,
        'selection_start': 229},
                       loc('Aristotle.txt'): {'attrib-starts': [],
        'first-line': 41,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 383,
        'selection_end': 383,
        'selection_start': 383},
                       loc('Calculus.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [6,
                           26,
                           34,
                           47,
                           57,
                           143,
                           147,
                           152],
        'sel-line': 2,
        'sel-line-start': 27,
        'selection_end': 38,
        'selection_start': 38},
                       loc('Config.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 298,
        'selection_end': 298,
        'selection_start': 298},
                       loc('Form.py'): {'attrib-starts': [('BadSequentError',
        658)],
        'first-line': 0,
        'folded-linenos': [12,
                           23,
                           34,
                           43,
                           53,
                           67,
                           89,
                           95,
                           102,
                           115,
                           124,
                           137,
                           145,
                           153,
                           166,
                           177,
                           188,
                           200,
                           211,
                           227,
                           243,
                           249,
                           259,
                           268,
                           282,
                           296,
                           308,
                           324,
                           336,
                           359,
                           381,
                           388,
                           397,
                           426,
                           441,
                           461,
                           486,
                           507,
                           519,
                           540,
                           546,
                           554,
                           563,
                           571,
                           577,
                           585,
                           599,
                           631,
                           669,
                           694,
                           707,
                           729,
                           742,
                           755,
                           775,
                           792,
                           810,
                           815,
                           833,
                           853,
                           878],
        'sel-line': 660,
        'sel-line-start': 21044,
        'selection_end': 21044,
        'selection_start': 21044},
                       loc('FormParser.py'): {'attrib-starts': [('WFFParser',
        10),
        ('WFFParser._parseTerm',
         87)],
        'first-line': 67,
        'folded-linenos': [87,
                           111,
                           154],
        'sel-line': 87,
        'sel-line-start': 3085,
        'selection_end': 3111,
        'selection_start': 3111},
                       loc('FormScanner.py'): {'attrib-starts': [('WFFScanne'\
        'r',
        85)],
        'first-line': 7,
        'folded-linenos': [26,
                           40,
                           72,
                           103,
                           120,
                           188,
                           216],
        'sel-line': 93,
        'sel-line-start': 2818,
        'selection_end': 2855,
        'selection_start': 2855},
                       loc('GUI.py'): {'attrib-starts': [('ProofView',
        371),
        ('ProofView.onProveButton',
         459)],
                                       'first-line': 144,
                                       'folded-linenos': [87,
        127,
        138,
        148,
        188,
        197,
        204,
        229,
        238,
        259,
        274,
        283,
        291,
        314,
        321,
        328,
        336,
        342,
        350,
        357,
        362,
        372,
        399,
        413,
        434],
                                       'sel-line': 487,
                                       'sel-line-start': 17881,
                                       'selection_end': 17881,
                                       'selection_start': 17881},
                       loc('GUITools.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [39,
                           72,
                           75,
                           81,
                           85,
                           96],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 6,
        'selection_start': 6},
                       loc('GuiWidgets.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 81,
        'selection_end': 81,
        'selection_start': 81},
                       loc('Inference.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Logic.py'): {'attrib-starts': [('Logic',
        37),
        ('Logic.__init__',
         41)],
        'first-line': 52,
        'folded-linenos': [55,
                           71,
                           87,
                           103,
                           119,
                           133,
                           147],
        'sel-line': 54,
        'sel-line-start': 1254,
        'selection_end': 1254,
        'selection_start': 1254},
                       loc('LogicSyntax.txt'): {'attrib-starts': [],
        'first-line': 227,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('More Aristotle Notes.txt'): {'attrib-starts': [],
        'first-line': 71,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('ParsingFactory.py'): {'attrib-starts': [('Parsin'\
        'gFactory',
        9),
        ('ParsingFactory._parseExpr',
         60)],
        'first-line': 245,
        'folded-linenos': [],
        'sel-line': 63,
        'sel-line-start': 2227,
        'selection_end': 2251,
        'selection_start': 2251},
                       loc('Proof.py'): {'attrib-starts': [('ProofBuilder',
        516),
        ('ProofBuilder.ruleAdditional',
         630)],
        'first-line': 0,
        'folded-linenos': [8,
                           31,
                           57,
                           69,
                           97,
                           112,
                           131,
                           148,
                           164,
                           177,
                           192,
                           209,
                           224,
                           241,
                           263,
                           276,
                           305,
                           317,
                           331,
                           344,
                           345,
                           376,
                           394,
                           414,
                           428,
                           449,
                           450,
                           480,
                           487,
                           502,
                           518,
                           531,
                           532,
                           544,
                           557,
                           570,
                           583,
                           599,
                           615,
                           630,
                           647,
                           672,
                           691,
                           699,
                           713,
                           727,
                           752,
                           766],
        'sel-line': 630,
        'sel-line-start': 22991,
        'selection_end': 22991,
        'selection_start': 22991},
                       loc('ProofBuilder.py'): {'attrib-starts': [('DemoSHLi'\
        'st',
        9),
        ('DemoSHList.__init__',
         10)],
        'first-line': 0,
        'folded-linenos': [10,
                           121,
                           124,
                           127,
                           131],
        'sel-line': 32,
        'sel-line-start': 1027,
        'selection_end': 1027,
        'selection_start': 1027},
                       loc('ProofBuilder___.py'): {'attrib-starts': [('DemoS'\
        'HList',
        9),
        ('DemoSHList.__init__',
         10)],
        'first-line': 0,
        'folded-linenos': [121,
                           124,
                           127,
                           131],
        'sel-line': 46,
        'sel-line-start': 1658,
        'selection_end': 1706,
        'selection_start': 1706},
                       loc('Scanner.py'): {'attrib-starts': [('ParseError',
        468)],
        'first-line': 284,
        'folded-linenos': [],
        'sel-line': 471,
        'sel-line-start': 18656,
        'selection_end': 18656,
        'selection_start': 18656},
                       loc('Sequent.py'): {'attrib-starts': [('ExprSet',
        4),
        ('ExprSet.__init__',
         7)],
        'first-line': 0,
        'folded-linenos': [7,
                           21,
                           34,
                           51,
                           73,
                           93,
                           113,
                           126,
                           129,
                           133,
                           138,
                           142,
                           146,
                           161],
        'sel-line': 14,
        'sel-line-start': 404,
        'selection_end': 429,
        'selection_start': 429},
                       loc('Symbols.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Tree.py'): {'first-line': 5,
        'selection_end': 545,
        'selection_start': 545},
                       loc('WFF.py'): {'attrib-starts': [],
                                       'first-line': 0,
                                       'folded-linenos': [],
                                       'sel-line': 0,
                                       'sel-line-start': 0,
                                       'selection_end': 0,
                                       'selection_start': 0},
                       loc('WFFParser.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('WFFScanner.py'): {'attrib-starts': [('Token',
        2),
        ('Token.__str__',
         34)],
        'first-line': 205,
        'folded-linenos': [],
        'sel-line': 52,
        'sel-line-start': 1601,
        'selection_end': 1601,
        'selection_start': 1601},
                       loc('__ExprTraits.py'): {'attrib-starts': [('Expr',
        11),
        ('Expr.__init__',
         12)],
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 317,
        'selection_end': 348,
        'selection_start': 348},
                       loc('aristotle.kpf'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('justification.py'): {'attrib-starts': [('SimpleC'\
        'itation',
        6),
        ('SimpleCitation.__repr__',
         13)],
        'first-line': 59,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 267,
        'selection_end': 267,
        'selection_start': 267},
                       loc('reason.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('stSyn.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('test.py'): {'first-line': 0,
        'selection_end': 543,
        'selection_start': 543},
                       loc('test2.py'): {'first-line': 0,
        'selection_end': 4637,
        'selection_start': 4637},
                       loc('testWindow.py'): {'attrib-starts': [('SubwffSele'\
        'ctor',
        -1),
        ('SubwffSelector.__init__',
         8)],
        'first-line': 0,
        'folded-linenos': [8,
                           29,
                           44,
                           49,
                           57,
                           64],
        'sel-line': 25,
        'sel-line-start': 810,
        'selection_end': 810,
        'selection_start': 810},
                       loc('util.py'): {'attrib-starts': [('MappedString',
        59),
        ('MappedString.setClientData',
         213)],
        'first-line': 0,
        'folded-linenos': [11,
                           39,
                           60,
                           71,
                           79,
                           87,
                           112,
                           130,
                           148,
                           166,
                           181,
                           198,
                           213,
                           228,
                           232,
                           242,
                           252,
                           260,
                           268,
                           276,
                           284,
                           294,
                           302,
                           310,
                           318,
                           326,
                           334,
                           342,
                           353,
                           362],
        'sel-line': 221,
        'sel-line-start': 7497,
        'selection_end': 7503,
        'selection_start': 7503},
                       loc('../edit.py'): {'attrib-starts': [('CommandEditor',
        35),
        ('CommandEditor.execute',
         39)],
        'first-line': 10,
        'folded-linenos': [],
        'sel-line': 40,
        'sel-line-start': 1238,
        'selection_end': 1248,
        'selection_start': 1248},
                       loc('../../../Python24/Lib/copy.py'): {'first-line': 166,
        'selection_end': 5820,
        'selection_start': 5820},
                       loc('../../../Python24/Lib/lib-tk/Tix.py'): {'first-l'\
        'ine': 515,
        'selection_end': 22244,
        'selection_start': 22244},
                       loc('../../../Python24/Lib/lib-tk/Tkinter.py'): {'fir'\
        'st-line': 357,
        'selection_end': 12741,
        'selection_start': 12741},
                       loc('../../../../Python27/Lib/lib-tk/FixTk.py'): {'at'\
        'trib-starts': [],
        'first-line': 37,
        'folded-linenos': [],
        'sel-line': 64,
        'sel-line-start': 2418,
        'selection_end': 2418,
        'selection_start': 2418},
                       loc('../../../../sim.py'): {'attrib-starts': [('Enhan'\
        'cement',
        65)],
        'first-line': 0,
        'folded-linenos': [4,
                           9,
                           25,
                           35,
                           40,
                           56,
                           66,
                           69,
                           74,
                           84,
                           87,
                           90,
                           93,
                           100,
                           106,
                           116,
                           123,
                           127,
                           133,
                           136,
                           141,
                           152,
                           158,
                           161,
                           169,
                           172,
                           175,
                           179,
                           184,
                           187,
                           192,
                           203,
                           209,
                           212,
                           218,
                           221,
                           224,
                           227,
                           254],
        'sel-line': 65,
        'sel-line-start': 2441,
        'selection_end': 2469,
        'selection_start': 2469},
                       loc('../../../../../Python33/Lib/tkinter/__init__.py'): {'a'\
        'ttrib-starts': [('BaseWidget',
                          1999),
                         ('BaseWidget._setup',
                          2001)],
        'first-line': 2005,
        'folded-linenos': [],
        'sel-line': 2010,
        'sel-line-start': 85479,
        'selection_end': 85479,
        'selection_start': 85479}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [''])}
proj.pyexec = {None: ('default',
                      'c:\\Python32\\python.exe')}
search.replace-history = [u"'ENTAILS'",
                          u"'INFIX OP'",
                          u"'PREFIX OP'",
                          u'items',
                          'self._tokLineText',
                          'self._tokColNum',
                          'self._tokLineNum',
                          'self._tokPos',
                          'self._tok',
                          'self._buffer',
                          'self._conclusions',
                          'self._premises',
                          'parser',
                          'WFF',
                          'self.tok',
                          'self._lineNum',
                          'self._linePos',
                          'self._mark',
                          'self._point']
search.search-history = [u'ruleName',
                         u'import',
                         u'ProofBuilder',
                         u'Lexeme.ENTAILS',
                         u'Lexeme.INFIX_OP',
                         u'Lexeme.PREFIX_OP',
                         u'Symbols',
                         u'S',
                         u'TODO',
                         u'%s %s',
                         u'_logic',
                         u'_',
                         u'util',
                         u'StructuredStrin',
                         u'StructuredString',
                         u'messagebox',
                         u'message',
                         u'FormScanner',
                         u'Form',
                         u'Lexeme']
testing.stored-results = (1,
                          [],
                          {})
